#
# Part of Assignment 2 - COMP90024 course at The University of Melbourne 
#
# Cluster and Cloud Computing - Team 24 
# 
# Authors: 
#
#  * Liam Simon (Student ID: 1128453)
#  * Rejoy Benjamin (Student ID: 1110935)
#  * Parikshit Diwan (Student ID: 1110497)
#  * Colin McLean (Student ID: 1139518)
#  * Matthias Bachfischer (Student ID: 1133751)
#
# Location: Melbourne
#
---
# Uninstall old Docker
- name: Uninstall old versions of docker
  become: yes
  apt:
    name: ['docker', 'docker-engine', 'docker.io']
    state: absent

# Install Docker dependencies
- name: Install dependencies
  become: yes
  apt:
    name: ['apt-transport-https', 'ca-certificates', 'curl', 'python-setuptools', 'software-properties-common']
    state: latest
    install_recommends: no
    update_cache: yes
  environment: "{{ proxy_env }}"

# Add Docker repository key
- name: Add Docker apt repository key
  become: yes
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present
  environment: "{{ proxy_env }}"

# Add Docker repository
- name: Add Docker apt repository and update apt cache
  become: yes
  apt_repository:
    repo: "deb https://download.docker.com/linux/{{ ansible_distribution|lower }} {{ ansible_distribution_release }} stable"
    mode: '644'
    update_cache: yes
    state: present
  environment: "{{proxy_env}}"

# Install Docker
- name: Install docker
  become: yes
  apt:
    name: ['docker-ce']
    state: latest
    install_recommends: no
    update_cache: yes
  environment: "{{proxy_env}}"

# Install Docker compose
- name: Install docker-compose
  tags: 'docker'
  become: yes
  pip:
    name: ['docker-compose']
    state: latest
  environment: "{{proxy_env}}"

# Make sure systemd directory exists
- name: Make sure that systemd directory exists
  file:
    path: '/etc/systemd/system'
    state: 'directory'
    owner: 'root'
    group: 'root'
    mode: '0755'

# Make sure docker.service.d directory exists
- name: Make sure that docker.service.d directory exists
  file:
    path: '/etc/systemd/system/docker.service.d'
    state: 'directory'
    owner: 'root'
    group: 'root'
    mode: '0755'
  become: yes

# Configure Docker system proxy
- name: Configure Docker proxy
  template:
    src: 'http-proxy.conf.j2'
    dest: '/etc/systemd/system/docker.service.d/http-proxy.conf'
    owner: 'root'
    group: 'root'
    mode: '0644'
  when: (ansible_service_mgr == 'systemd' and
        (proxy_env.http_proxy is defined or proxy_env.https_proxy is defined))
  become: yes

# Restart systemd daemons
- name: Reload systemd daemons
  command: systemctl daemon-reload
  become: yes

# Restart Docker daemon
- name: Restart docker daemon
  command: systemctl restart docker
  become: yes

# Restart Docker daemon
- name: Restart docker
  service:
    name: docker
    state: restarted
  become: yes